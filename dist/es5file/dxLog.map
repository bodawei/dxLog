{
  "version": 3,
  "sources": [
    "node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "source/index.js"
  ],
  "names": [],
  "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;ACoBA;;;;;;;;;;;;;;;;;AAgBA,IAAI,QAAQ;AACR,UAAM,EAAN;AACA,UAAM,EAAN;AACA,UAAM,EAAN;AACA,WAAO,EAAP;CAJA;;;;;AAUJ,SAAS,IAAT,GAAgB;AACZ,UAAM,IAAI,KAAJ,CAAU,UAAU,CAAV,CAAV,CAAN,CADY;CAAhB;;;;;AAOA,SAAS,IAAT,GAAuB;AACnB,QAAI,OAAO,OAAP,CAAe,KAAf,IAAwB,MAAM,IAAN,EAAY;;;AACpC,6BAAQ,IAAR,4BADoC;KAAxC;CADJ;;;;;AASA,SAAS,IAAT,GAAuB;AACnB,QAAI,OAAO,OAAP,CAAe,KAAf,IAAwB,MAAM,IAAN,EAAY;;;AACpC,8BAAQ,IAAR,6BADoC;KAAxC;CADJ;;;;;AASA,SAAS,KAAT,GAAwB;AACpB,QAAI,OAAO,OAAP,CAAe,KAAf,IAAwB,MAAM,KAAN,EAAa;;;AACrC,8BAAQ,GAAR,6BADqC;KAAzC;CADJ;;AAMA,OAAO,OAAP,GAAiB;AACb,WAAO,KAAP;AACA,WAAO,MAAM,IAAN;AACP,UAAM,IAAN;AACA,UAAM,IAAN;AACA,UAAM,IAAN;AACA,WAAO,KAAP;CANJ",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * Copyright (c) 2015, 2016 by Delphix. All rights reserved.\n */\n\n/* eslint-disable no-console */\n\n'use strict';\n\n/*\n * This module defines a simple logging interface. By default, this will log messages to the console.\n * The logging functions are:\n *    dxLog.fail();\n *    dxLog.warn();\n *    dxLog.info();\n *    dxLog.debug();\n * If the dxLog.level value is set to FAIL, WARN, INFO or DEBUG, then log messages will only be written out at\n * the specified level or higher (thus, if set to INFO, the default, DEBUG messages will not be logged)\n */\n\n/*\n * Define constants for the logging level\n */\nvar LEVEL = {\n    FAIL: 80,\n    WARN: 60,\n    INFO: 40,\n    DEBUG: 20\n};\n\n/*\n * Report a failing message by way of throwing an error\n */\nfunction fail() {\n    throw new Error(arguments[0]);\n}\n\n/*\n * Report a warning message. Writes the info to the console\n */\nfunction warn(...args) {\n    if (module.exports.level <= LEVEL.WARN) {\n        console.warn(...args);\n    }\n}\n\n/*\n * Report an info message. Writes the info to the console\n */\nfunction info(...args) {\n    if (module.exports.level <= LEVEL.INFO) {\n        console.info(...args);\n    }\n}\n\n/*\n * Report an debug message. Writes the info to the console\n */\nfunction debug(...args) {\n    if (module.exports.level <= LEVEL.DEBUG) {\n        console.log(...args);\n    }\n}\n\nmodule.exports = {\n    LEVEL: LEVEL,\n    level: LEVEL.INFO,\n    fail: fail,\n    warn: warn,\n    info: info,\n    debug: debug\n};\n"
  ]
}